I"IQ<h3 id="overview">Overview</h3>
<p>Airflow is a platform to programmatically author, schedule, and monitor workflows. Use airflow to author workflows as directed acyclic graphs (DAGs) of tasks. The airflow scheduler executes our tasks on an array of workers while following the specified dependencies. Basically, it help us to automate the script. Meanwhile, the COVID‑19 pandemic, also known as the coronavirus pandemic, is an ongoing global pandemic of coronavirus disease 2019 (COVID‑19), caused by severe acute respiratory syndrome coronavirus 2 (SARS‑CoV‑2). The outbreak was first identified in Wuhan, China, in December 2019. We need to monitor the data in Indonesia, daily. Further, Kompas news is one of the platform which updates the data in dashboard at <a href="https://www.kompas.com/covid-19"><strong>here</strong></a></p>

<h3 id="prerequisites">Prerequisites</h3>
<p>Before talking more intensively, please read and set up following tools properly</p>
<ol>
  <li>Install Apache Airflow <a href="https://audhiaprilliant.github.io/airflow-documentation/"><strong>read here</strong></a></li>
  <li>Install the module dependencies
    <ul>
      <li><strong>requests</strong> for web scraping</li>
      <li><strong>bs4</strong> for web scraping using BeautifulSoup</li>
      <li><strong>pandas</strong> for data manipulation</li>
      <li><strong>re</strong> for regular expression</li>
      <li><strong>os</strong> for file management</li>
      <li><strong>datetime</strong> for timing</li>
      <li><strong>json</strong> for reading JSON file</li>
    </ul>
  </li>
  <li>Telegram
    <ul>
      <li>Telegram token <a href="https://www.freecodecamp.org/news/telegram-push-notifications-58477e71b2c2/"><strong>read here</strong></a></li>
      <li>Telegram chat ID <a href="https://www.freecodecamp.org/news/telegram-push-notifications-58477e71b2c2/"><strong>read here</strong></a></li>
    </ul>
  </li>
  <li>Email
    <ul>
      <li>Apps password that contains 16 digits of characters <a href="https://helptechcommunity.wordpress.com/2020/04/04/airflow-email-configuration/"><strong>read here</strong></a></li>
      <li>set up <code class="language-plaintext highlighter-rouge">airflow.cfg</code> file to synchronize with our email</li>
    </ul>
  </li>
  <li>set up file and directory in Airflow
    <ul>
      <li>Save the DAG Python file in directory <code class="language-plaintext highlighter-rouge">dags</code></li>
      <li>Save Telegram chat ID in directory <code class="language-plaintext highlighter-rouge">config</code></li>
      <li>Create directory <code class="language-plaintext highlighter-rouge">data/covid19</code> in Airflow to store <code class="language-plaintext highlighter-rouge">summary_covid19.txt</code> and <code class="language-plaintext highlighter-rouge">daily_update_covid.csv</code>. Please <a href="/assets/images/12-4.png"><strong>click here</strong></a> to look up the detail of recommended directory.</li>
    </ul>
  </li>
</ol>

<h3 id="how-to-scrape-data-from-kompas-news">How to Scrape Data from Kompas News</h3>
<h5 id="1-install-and-import-the-module-dependencies">1 Install and import the module dependencies</h5>
<p>As mentioned on above prerequisites, first we must install all the module dependencies. These would have helped us to write our Python program properly. Easily, we can write out all the modules in <code class="language-plaintext highlighter-rouge">requirements.txt</code> file.</p>
<pre><code class="language-txt">bs4
pandas
</code></pre>
<p>Furthermore, <code class="language-plaintext highlighter-rouge">requests</code>,<code class="language-plaintext highlighter-rouge">re</code>,<code class="language-plaintext highlighter-rouge">os</code>,<code class="language-plaintext highlighter-rouge">datetime</code>, and <code class="language-plaintext highlighter-rouge">json</code> are the built-in modules, so we don’t need to install. After installing the modules that needed, import it as follows.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="rouge-code"><pre><span class="c1"># Modules for web scraping
</span><span class="kn">import</span> <span class="nn">requests</span>
<span class="kn">from</span> <span class="nn">bs4</span> <span class="kn">import</span> <span class="n">BeautifulSoup</span>
<span class="c1"># Module for data manipulation
</span><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="c1"># Module for regular expression
</span><span class="kn">import</span> <span class="nn">re</span>
<span class="c1"># Module for file management
</span><span class="kn">import</span> <span class="nn">os</span>
<span class="c1"># Module for timing
</span><span class="kn">from</span> <span class="nn">datetime</span> <span class="kn">import</span> <span class="n">datetime</span>
<span class="c1"># Module for reading JSON file
</span><span class="kn">import</span> <span class="nn">json</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h5 id="2-get-the-url-of-kompas-news-page-for-daily-monitoring-covid-19">2 Get the URL of Kompas news page for daily monitoring Covid-19</h5>
<p>This function is created to read the HTML page on Python. We use BeautifulSoup for wrangling the HTML elements.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
</pre></td><td class="rouge-code"><pre><span class="k">def</span> <span class="nf">get_url</span><span class="p">():</span>
    <span class="c1"># URL
</span>    <span class="n">url</span> <span class="o">=</span> <span class="s">'https://www.kompas.com/covid-19'</span>
    <span class="n">page</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
    <span class="c1"># Wrangling HTML with BeautifulSoup
</span>    <span class="n">soup</span> <span class="o">=</span> <span class="n">BeautifulSoup</span><span class="p">(</span><span class="n">page</span><span class="p">.</span><span class="n">content</span><span class="p">,</span><span class="s">'html.parser'</span><span class="p">)</span>
    <span class="k">return</span><span class="p">(</span><span class="n">soup</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h5 id="3-get-current-date">3 Get current date</h5>
<p>The updated time can be a metadata to track the up to date data for daily monitoring and store it into our local directory. The time is scraped and save it in original Indonesia Western Time (WIB). We do some transformation to make it in standard form of <code class="language-plaintext highlighter-rouge">YY/MM/DD</code>.</p>
<p align="center">
<img src="/assets/images/12-1.png" alt="drawing" width="700" />
</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
</pre></td><td class="rouge-code"><pre><span class="n">dict_month</span> <span class="o">=</span> <span class="p">{</span><span class="s">'Januari'</span><span class="p">:</span><span class="s">'01'</span><span class="p">,</span><span class="s">'Februari'</span><span class="p">:</span><span class="s">'02'</span><span class="p">,</span><span class="s">'Maret'</span><span class="p">:</span><span class="s">'03'</span><span class="p">,</span><span class="s">'April'</span><span class="p">:</span><span class="s">'04'</span><span class="p">,</span><span class="s">'Mei'</span><span class="p">:</span><span class="s">'05'</span><span class="p">,</span><span class="s">'Juni'</span><span class="p">:</span><span class="s">'06'</span><span class="p">,</span><span class="s">'Juli'</span><span class="p">:</span><span class="s">'07'</span><span class="p">,</span>
              <span class="s">'Agustus'</span><span class="p">:</span><span class="s">'08'</span><span class="p">,</span><span class="s">'September'</span><span class="p">:</span><span class="s">'09'</span><span class="p">,</span><span class="s">'Oktober'</span><span class="p">:</span><span class="s">'10'</span><span class="p">,</span><span class="s">'November'</span><span class="p">:</span><span class="s">'11'</span><span class="p">,</span><span class="s">'Desember'</span><span class="p">:</span><span class="s">'12'</span><span class="p">}</span>
<span class="k">def</span> <span class="nf">get_current_date</span><span class="p">(</span><span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
    <span class="n">date_scrape</span> <span class="o">=</span> <span class="n">soup</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'span'</span><span class="p">,</span><span class="n">class_</span><span class="o">=</span><span class="s">'covid__date'</span><span class="p">).</span><span class="n">text</span>
    <span class="n">date_scrape</span> <span class="o">=</span> <span class="n">re</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="s">r'Update terakhir: (\S+.+WIB)'</span><span class="p">,</span><span class="n">date_scrape</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="n">replace</span><span class="p">(</span><span class="s">', '</span><span class="p">,</span><span class="s">','</span><span class="p">)</span>
    <span class="n">date</span> <span class="o">=</span> <span class="n">date_scrape</span><span class="p">.</span><span class="n">split</span><span class="p">(</span><span class="s">','</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
    <span class="n">time</span> <span class="o">=</span> <span class="n">date_scrape</span><span class="p">.</span><span class="n">split</span><span class="p">(</span><span class="s">','</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span>
    <span class="c1"># Date manipulation
</span>    <span class="n">date_format</span> <span class="o">=</span> <span class="n">re</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="s">r'\w+'</span><span class="p">,</span><span class="n">date</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
    <span class="n">month_format</span> <span class="o">=</span> <span class="n">re</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="s">r'\w+'</span><span class="p">,</span><span class="n">date</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span>
    <span class="n">year_format</span> <span class="o">=</span> <span class="n">re</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="s">r'\w+'</span><span class="p">,</span><span class="n">date</span><span class="p">)[</span><span class="mi">2</span><span class="p">]</span>
    <span class="c1"># If condition
</span>    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">date_format</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
        <span class="n">date_format</span> <span class="o">=</span> <span class="s">'0'</span> <span class="o">+</span> <span class="n">date_format</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">date_format</span> <span class="o">=</span> <span class="n">date_format</span>
    <span class="c1"># New date format
</span>    <span class="n">date</span> <span class="o">=</span> <span class="n">year_format</span><span class="o">+</span><span class="s">'/'</span><span class="o">+</span><span class="n">dict_month</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">month_format</span><span class="p">)</span><span class="o">+</span><span class="s">'/'</span><span class="o">+</span><span class="n">date_format</span>
    <span class="k">return</span><span class="p">(</span><span class="n">date</span><span class="p">,</span><span class="n">time</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h5 id="4-get-the-aggregated-data">4 Get the aggregated data</h5>
<p>The daily aggregated consists of four information namely <strong>confirmed</strong>, <strong>treated</strong>, <strong>deaths</strong>, and <strong>recovered</strong>.</p>
<p align="center">
<img src="/assets/images/12-2.png" alt="drawing" width="700" />
</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
</pre></td><td class="rouge-code"><pre><span class="k">def</span> <span class="nf">get_daily_summary</span><span class="p">(</span><span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
    <span class="n">soup</span> <span class="o">=</span> <span class="n">get_url</span><span class="p">()</span>
    <span class="n">date</span><span class="p">,</span><span class="n">time</span> <span class="o">=</span> <span class="n">get_current_date</span><span class="p">()</span>
    <span class="c1"># Get summary
</span>    <span class="c1"># Regular expression pattern
</span>    <span class="n">pattern_summary</span> <span class="o">=</span> <span class="n">re</span><span class="p">.</span><span class="nb">compile</span><span class="p">(</span><span class="s">r'\d[^\s]+'</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">job_elem</span> <span class="ow">in</span> <span class="n">soup</span><span class="p">.</span><span class="n">find_all</span><span class="p">(</span><span class="s">'div'</span><span class="p">,</span><span class="n">class_</span><span class="o">=</span><span class="s">'covid__box'</span><span class="p">):</span>
        <span class="c1"># Each job_elem is a new BeautifulSoup object.
</span>        <span class="n">terkonfirmasi_elem</span> <span class="o">=</span> <span class="n">job_elem</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'div'</span><span class="p">,</span><span class="n">class_</span><span class="o">=</span><span class="s">'covid__box2 -cases'</span><span class="p">)</span>
        <span class="n">dirawat_elem</span> <span class="o">=</span> <span class="n">job_elem</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'div'</span><span class="p">,</span><span class="n">class_</span><span class="o">=</span><span class="s">'covid__box2 -odp'</span><span class="p">)</span>
        <span class="n">meninggal_elem</span> <span class="o">=</span> <span class="n">job_elem</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'div'</span><span class="p">,</span><span class="n">class_</span><span class="o">=</span><span class="s">'covid__box2 -gone'</span><span class="p">)</span>
        <span class="n">sembuh_elem</span> <span class="o">=</span> <span class="n">job_elem</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'div'</span><span class="p">,</span><span class="n">class_</span><span class="o">=</span><span class="s">'covid__box2 -health'</span><span class="p">)</span>
        <span class="c1"># Daily update
</span>        <span class="n">a</span> <span class="o">=</span> <span class="n">pattern_summary</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="n">terkonfirmasi_elem</span><span class="p">.</span><span class="n">text</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="n">replace</span><span class="p">(</span><span class="s">','</span><span class="p">,</span><span class="s">''</span><span class="p">)</span>
        <span class="n">b</span> <span class="o">=</span> <span class="n">pattern_summary</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="n">dirawat_elem</span><span class="p">.</span><span class="n">text</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="n">replace</span><span class="p">(</span><span class="s">','</span><span class="p">,</span><span class="s">''</span><span class="p">)</span>
        <span class="n">c</span> <span class="o">=</span> <span class="n">pattern_summary</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="n">meninggal_elem</span><span class="p">.</span><span class="n">text</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="n">replace</span><span class="p">(</span><span class="s">','</span><span class="p">,</span><span class="s">''</span><span class="p">)</span>
        <span class="n">d</span> <span class="o">=</span> <span class="n">pattern_summary</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="n">sembuh_elem</span><span class="p">.</span><span class="n">text</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="n">replace</span><span class="p">(</span><span class="s">','</span><span class="p">,</span><span class="s">''</span><span class="p">)</span>
        <span class="n">daily_update</span> <span class="o">=</span> <span class="s">','</span><span class="p">.</span><span class="n">join</span><span class="p">([</span><span class="n">date</span><span class="p">,</span><span class="n">time</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="p">,</span><span class="n">d</span><span class="p">])</span>
    <span class="k">return</span><span class="p">(</span><span class="n">daily_update</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h5 id="5-save-the-aggregated-data">5 Save the aggregated data</h5>
<p>This aggregated will be saved in extension of <code class="language-plaintext highlighter-rouge">txt</code>. Mostly, the Government does press conference at 16.00 WIB, it might be faster or slower. And Kompas team must update the current data to the dashboard. It can not be predict properly. So to make sure we will not get the duplicated data, the data must be checked with previous period.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="rouge-code"><pre><span class="k">def</span> <span class="nf">summary_save_txt</span><span class="p">(</span><span class="o">**</span><span class="n">context</span><span class="p">):</span>
    <span class="n">value</span> <span class="o">=</span> <span class="n">context</span><span class="p">[</span><span class="s">'task_instance'</span><span class="p">].</span><span class="n">xcom_pull</span><span class="p">(</span><span class="n">task_ids</span> <span class="o">=</span> <span class="s">'summary_scraping_data'</span><span class="p">)</span>
    <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">dir_path</span><span class="o">+</span><span class="s">'/data/covid19/summary_covid19.txt'</span><span class="p">,</span><span class="s">'r'</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
        <span class="n">lines</span> <span class="o">=</span> <span class="n">f</span><span class="p">.</span><span class="n">read</span><span class="p">().</span><span class="n">splitlines</span><span class="p">()</span>
        <span class="n">last_line</span> <span class="o">=</span> <span class="n">lines</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
        <span class="k">if</span> <span class="n">last_line</span> <span class="o">==</span> <span class="n">value</span><span class="p">:</span>
            <span class="n">notif</span> <span class="o">=</span> <span class="s">'Last update:'</span><span class="p">,</span><span class="n">re</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="s">r'^(.+?),'</span><span class="p">,</span><span class="n">last_line</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">dir_path</span><span class="o">+</span><span class="s">'/data/covid19/summary_covid19.txt'</span><span class="p">,</span><span class="s">'a+'</span><span class="p">)</span> <span class="k">as</span> <span class="n">ff</span><span class="p">:</span>
                <span class="n">ff</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="s">'{}</span><span class="se">\n</span><span class="s">'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">value</span><span class="p">))</span>
                <span class="n">ff</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>
            <span class="n">notif</span> <span class="o">=</span> <span class="s">'Up to date data:'</span><span class="p">,</span> <span class="n">re</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="s">r'^(.+?),'</span><span class="p">,</span><span class="n">value</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
    <span class="k">return</span><span class="p">(</span><span class="n">notif</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h5 id="6-get-the-provinces-data">6 Get the provinces data</h5>
<p>This data contains the accumulated data for all provinces in Indonesia. So, we can conduct several analysis for selected province as we want and compare it to another.</p>
<p align="center">
<img src="/assets/images/12-3.png" alt="drawing" width="700" />
</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
</pre></td><td class="rouge-code"><pre><span class="k">def</span> <span class="nf">get_daily_summary_provinces</span><span class="p">(</span><span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
    <span class="n">soup</span> <span class="o">=</span> <span class="n">get_url</span><span class="p">()</span>
    <span class="n">date</span><span class="p">,</span><span class="n">time</span> <span class="o">=</span> <span class="n">get_current_date</span><span class="p">()</span>
    <span class="c1"># Get summary - provinsi
</span>    <span class="c1"># Regular expression pattern
</span>    <span class="n">pattern_prov</span> <span class="o">=</span> <span class="n">re</span><span class="p">.</span><span class="nb">compile</span><span class="p">(</span><span class="s">r'\d+'</span><span class="p">)</span>
    <span class="n">provinsi</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">terkonfirmasi_prov</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">meninggal_prov</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">sembuh_prov</span> <span class="o">=</span> <span class="p">[]</span>

    <span class="k">for</span> <span class="n">elem</span> <span class="ow">in</span> <span class="n">soup</span><span class="p">.</span><span class="n">find_all</span><span class="p">(</span><span class="s">'div'</span><span class="p">,</span><span class="n">class_</span><span class="o">=</span><span class="s">'covid__row'</span><span class="p">):</span>
        <span class="n">provinsi_elem</span> <span class="o">=</span> <span class="n">elem</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'div'</span><span class="p">,</span><span class="n">class_</span><span class="o">=</span><span class="s">'covid__prov'</span><span class="p">)</span>
        <span class="n">terkonfirmasi_elem</span> <span class="o">=</span> <span class="n">elem</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'span'</span><span class="p">,</span><span class="n">class_</span><span class="o">=</span><span class="s">'-odp'</span><span class="p">)</span>
        <span class="n">meninggal_elem</span> <span class="o">=</span> <span class="n">elem</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'span'</span><span class="p">,</span><span class="n">class_</span><span class="o">=</span><span class="s">'-gone'</span><span class="p">)</span>
        <span class="n">sembuh_elem</span> <span class="o">=</span> <span class="n">elem</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'span'</span><span class="p">,</span><span class="n">class_</span><span class="o">=</span><span class="s">'-health'</span><span class="p">)</span>
        <span class="c1"># Append to list
</span>        <span class="n">provinsi</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">provinsi_elem</span><span class="p">.</span><span class="n">text</span><span class="p">)</span>
        <span class="n">terkonfirmasi_prov</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">pattern_prov</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="n">terkonfirmasi_elem</span><span class="p">.</span><span class="n">text</span><span class="p">)[</span><span class="mi">0</span><span class="p">])</span>
        <span class="n">meninggal_prov</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">pattern_prov</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="n">meninggal_elem</span><span class="p">.</span><span class="n">text</span><span class="p">)[</span><span class="mi">0</span><span class="p">])</span>
        <span class="n">sembuh_prov</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">pattern_prov</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="n">sembuh_elem</span><span class="p">.</span><span class="n">text</span><span class="p">)[</span><span class="mi">0</span><span class="p">])</span>

    <span class="c1"># Create dataframe
</span>    <span class="n">dic_data</span> <span class="o">=</span> <span class="p">{</span><span class="s">'date'</span><span class="p">:[</span><span class="n">date</span><span class="p">]</span><span class="o">*</span><span class="nb">len</span><span class="p">(</span><span class="n">provinsi</span><span class="p">),</span><span class="s">'time'</span><span class="p">:[</span><span class="n">time</span><span class="p">]</span><span class="o">*</span><span class="nb">len</span><span class="p">(</span><span class="n">provinsi</span><span class="p">),</span><span class="s">'provinces'</span><span class="p">:</span><span class="n">provinsi</span><span class="p">,</span>
                <span class="s">'confirmed'</span><span class="p">:</span><span class="n">terkonfirmasi_prov</span><span class="p">,</span><span class="s">'deaths'</span><span class="p">:</span><span class="n">meninggal_prov</span><span class="p">,</span><span class="s">'recovered'</span><span class="p">:</span><span class="n">sembuh_prov</span><span class="p">}</span>
    <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span> <span class="o">=</span> <span class="n">dic_data</span><span class="p">)</span>
    <span class="k">return</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h5 id="7-save-the-provinces-data">7 Save the provinces data</h5>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
</pre></td><td class="rouge-code"><pre><span class="k">def</span> <span class="nf">provinces_save_csv</span><span class="p">(</span><span class="o">**</span><span class="n">context</span><span class="p">):</span>
    <span class="n">value</span> <span class="o">=</span> <span class="n">context</span><span class="p">[</span><span class="s">'task_instance'</span><span class="p">].</span><span class="n">xcom_pull</span><span class="p">(</span><span class="n">task_ids</span> <span class="o">=</span> <span class="s">'provinces_scraping_data'</span><span class="p">)</span>
    <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">dir_path</span><span class="o">+</span><span class="s">'/data/covid19/daily_update_covid.csv'</span><span class="p">,</span><span class="s">'r'</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
        <span class="n">lines</span> <span class="o">=</span> <span class="n">f</span><span class="p">.</span><span class="n">read</span><span class="p">().</span><span class="n">splitlines</span><span class="p">()</span>
        <span class="n">last_line</span> <span class="o">=</span> <span class="n">lines</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
        <span class="k">if</span> <span class="n">re</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="s">r'^(.+?),'</span><span class="p">,</span><span class="n">last_line</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="n">value</span><span class="p">[</span><span class="s">'date'</span><span class="p">].</span><span class="n">unique</span><span class="p">().</span><span class="n">tolist</span><span class="p">()[</span><span class="mi">0</span><span class="p">]:</span>
            <span class="n">notif</span> <span class="o">=</span> <span class="s">'Last update:'</span><span class="p">,</span><span class="n">re</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="s">r'^(.+?),'</span><span class="p">,</span><span class="n">last_line</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">dir_path</span><span class="o">+</span><span class="s">'/data/covid19/daily_update_covid.csv'</span><span class="p">,</span><span class="s">'a'</span><span class="p">)</span> <span class="k">as</span> <span class="n">ff</span><span class="p">:</span>
                <span class="n">value</span><span class="p">.</span><span class="n">to_csv</span><span class="p">(</span><span class="n">ff</span><span class="p">,</span><span class="n">header</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span><span class="n">index</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
                <span class="n">ff</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>
            <span class="n">notif</span> <span class="o">=</span> <span class="s">'Up to date data:'</span><span class="p">,</span> <span class="n">value</span><span class="p">[</span><span class="s">'date'</span><span class="p">].</span><span class="n">unique</span><span class="p">().</span><span class="n">tolist</span><span class="p">()[</span><span class="mi">0</span><span class="p">]</span>
    <span class="k">return</span><span class="p">(</span><span class="n">notif</span><span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h5 id="8-define-dag-and-set-schedule">8 Define DAG and set schedule</h5>
<p>Before defining the DAG, we must set up default argument for tasks.</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">owner</code> refers to the creator or owner. We can put our name or division</li>
  <li><code class="language-plaintext highlighter-rouge">depends_on_past</code> is assigned to <code class="language-plaintext highlighter-rouge">True</code> if the next task will be running when previous one is success and vice versa</li>
  <li><code class="language-plaintext highlighter-rouge">start_date</code> defines the start date of our airflow job</li>
  <li><code class="language-plaintext highlighter-rouge">email</code> must be assigned with our email. If any task is failed, the Airflow directly inform us</li>
  <li><code class="language-plaintext highlighter-rouge">retries</code> is the number of repetition if our task is failed before sending us an alert by email</li>
  <li><code class="language-plaintext highlighter-rouge">retry_delay</code> refers to the interval between two repetition</li>
</ul>

<p>At last, it is required to determine our schedule in UTC, when our job will be running. Confused with the configuration of cron? Don’t worry, click <a href="https://crontab.guru/"><strong>here</strong></a>. It need to remember that <strong>dag_id is unique in Airflow database</strong>. For details of our DAG, you can look at following codes:</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
</pre></td><td class="rouge-code"><pre><span class="c1"># Set default args
</span><span class="n">default_args</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">'owner'</span><span class="p">:</span> <span class="s">'airflow'</span><span class="p">,</span>
    <span class="s">'depends_on_past'</span><span class="p">:</span> <span class="bp">False</span><span class="p">,</span>
    <span class="s">'start_date'</span><span class="p">:</span> <span class="n">datetime</span><span class="p">(</span><span class="mi">2020</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">20</span><span class="p">),</span>
    <span class="s">'email'</span><span class="p">:</span> <span class="p">[</span><span class="s">'your_email@gmail.com'</span><span class="p">],</span>
    <span class="s">'email_on_failure'</span><span class="p">:</span> <span class="bp">True</span><span class="p">,</span>
    <span class="s">'email_on_retry'</span><span class="p">:</span> <span class="bp">False</span><span class="p">,</span>
    <span class="s">'retries'</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
    <span class="s">'retry_delay'</span><span class="p">:</span> <span class="n">timedelta</span><span class="p">(</span><span class="n">minutes</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
<span class="p">}</span>

<span class="c1"># Set Schedule: Run pipeline once a day.
# Use cron to define exact time (UTC). Eg. 8:15 AM would be '15 08 * * *'
</span><span class="n">schedule_interval</span> <span class="o">=</span> <span class="s">'30 09 * * *'</span>

<span class="c1"># Define DAG: Set ID and assign default args and schedule interval
</span><span class="n">dag</span> <span class="o">=</span> <span class="n">DAG</span><span class="p">(</span>
    <span class="n">dag_id</span> <span class="o">=</span> <span class="s">'scraping_data_covid19'</span><span class="p">,</span>
    <span class="n">default_args</span> <span class="o">=</span> <span class="n">default_args</span><span class="p">,</span>
    <span class="n">schedule_interval</span> <span class="o">=</span> <span class="n">schedule_interval</span>
<span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h5 id="9-create-tasks">9 Create tasks</h5>
<p>For this web scraping, we create six main tasks. Each task call the function we have define above. This is how we create task in Apache Airflow. Formally, we need to create tasks to show us beginning and ending of a job (<code class="language-plaintext highlighter-rouge">echo task start</code> and <code class="language-plaintext highlighter-rouge">echo task end</code>). Furthermore, an operator represents a single, ideally idempotent, task. Operators determine what actually executes when our DAG runs. We will use three operators:</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">BashOperator</code> is used to execute commands in a Bash shell</li>
  <li><code class="language-plaintext highlighter-rouge">PythonOperator</code> for executing commands in Python</li>
  <li><code class="language-plaintext highlighter-rouge">EmailOperator</code> connects with our configuration in <code class="language-plaintext highlighter-rouge">airflow.cfg</code>, so we can send data or information to private email</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
</pre></td><td class="rouge-code"><pre><span class="c1"># Echo task start
</span><span class="n">task_start</span> <span class="o">=</span> <span class="n">BashOperator</span><span class="p">(</span>
    <span class="n">task_id</span> <span class="o">=</span> <span class="s">'start_task'</span><span class="p">,</span>
    <span class="n">bash_command</span> <span class="o">=</span> <span class="s">'echo start'</span><span class="p">,</span>
    <span class="n">dag</span> <span class="o">=</span> <span class="n">dag</span>
<span class="p">)</span>

<span class="c1"># Task 1: scraping daily summary data
</span><span class="n">summary_scraping</span> <span class="o">=</span> <span class="n">PythonOperator</span><span class="p">(</span>
    <span class="n">task_id</span> <span class="o">=</span> <span class="s">'summary_scraping_data'</span><span class="p">,</span>
    <span class="n">python_callable</span> <span class="o">=</span> <span class="n">get_daily_summary</span><span class="p">,</span>
    <span class="n">dag</span> <span class="o">=</span> <span class="n">dag</span>
<span class="p">)</span>

<span class="c1"># Task 2: save the daily summary data
</span><span class="n">summary_save</span> <span class="o">=</span> <span class="n">PythonOperator</span><span class="p">(</span>
    <span class="n">task_id</span> <span class="o">=</span> <span class="s">'summary_save_data'</span><span class="p">,</span>
    <span class="n">python_callable</span> <span class="o">=</span> <span class="n">summary_save_txt</span><span class="p">,</span>
    <span class="n">provide_context</span> <span class="o">=</span> <span class="bp">True</span><span class="p">,</span>
    <span class="n">dag</span> <span class="o">=</span> <span class="n">dag</span>
<span class="p">)</span>

<span class="c1"># Task 3: scraping daily provinces data
</span><span class="n">provinces_scraping</span> <span class="o">=</span> <span class="n">PythonOperator</span><span class="p">(</span>
    <span class="n">task_id</span> <span class="o">=</span> <span class="s">'provinces_scraping_data'</span><span class="p">,</span>
    <span class="n">python_callable</span> <span class="o">=</span> <span class="n">get_daily_summary_provinces</span><span class="p">,</span>
    <span class="n">dag</span> <span class="o">=</span> <span class="n">dag</span>
<span class="p">)</span>

<span class="c1"># Task 4: save the daily summary data
</span><span class="n">provinces_save</span> <span class="o">=</span> <span class="n">PythonOperator</span><span class="p">(</span>
    <span class="n">task_id</span> <span class="o">=</span> <span class="s">'provinces_save_data'</span><span class="p">,</span>
    <span class="n">python_callable</span> <span class="o">=</span> <span class="n">provinces_save_csv</span><span class="p">,</span>
    <span class="n">provide_context</span> <span class="o">=</span> <span class="bp">True</span><span class="p">,</span>
    <span class="n">dag</span> <span class="o">=</span> <span class="n">dag</span>
<span class="p">)</span>

<span class="c1"># Task 5: send norification email
</span><span class="n">send_email</span> <span class="o">=</span> <span class="n">EmailOperator</span><span class="p">(</span>
    <span class="n">task_id</span> <span class="o">=</span> <span class="s">'send_email'</span><span class="p">,</span>
    <span class="n">to</span> <span class="o">=</span> <span class="p">[</span><span class="s">'your_email@gmail.com'</span><span class="p">],</span>
    <span class="n">subject</span> <span class="o">=</span> <span class="s">'Covid19 data '</span><span class="p">,</span>
    <span class="n">html_content</span> <span class="o">=</span> <span class="s">'''
    {date} Covid19 data has been scraped!
    '''</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">date</span> <span class="o">=</span> <span class="n">current_date</span><span class="p">),</span>
    <span class="n">dag</span> <span class="o">=</span> <span class="n">dag</span>
<span class="p">)</span>

<span class="c1"># Task 6: send notification Telegram
</span><span class="n">send_telegram</span> <span class="o">=</span> <span class="n">PythonOperator</span><span class="p">(</span>
    <span class="n">task_id</span> <span class="o">=</span> <span class="s">'send_telegram'</span><span class="p">,</span>
    <span class="n">python_callable</span> <span class="o">=</span> <span class="n">telegram_bot</span><span class="p">,</span>
    <span class="n">provide_context</span> <span class="o">=</span> <span class="bp">True</span><span class="p">,</span>
    <span class="n">dag</span> <span class="o">=</span> <span class="n">dag</span>
<span class="p">)</span>

<span class="c1"># Echo task finish
</span><span class="n">finish_start</span> <span class="o">=</span> <span class="n">BashOperator</span><span class="p">(</span>
    <span class="n">task_id</span> <span class="o">=</span> <span class="s">'finish_task'</span><span class="p">,</span>
    <span class="n">bash_command</span> <span class="o">=</span> <span class="s">'echo finish'</span><span class="p">,</span>
    <span class="n">dag</span> <span class="o">=</span> <span class="n">dag</span>
<span class="p">)</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<h5 id="10-set-up-task-dependencies">10 set up task dependencies</h5>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
</pre></td><td class="rouge-code"><pre><span class="c1"># Set up the dependencies
</span><span class="n">task_start</span> <span class="o">&gt;&gt;</span> <span class="n">summary_scraping</span> <span class="o">&gt;&gt;</span> <span class="n">summary_save</span> <span class="o">&gt;&gt;</span> <span class="n">provinces_scraping</span>
<span class="n">provinces_scraping</span> <span class="o">&gt;&gt;</span> <span class="n">provinces_save</span> <span class="o">&gt;&gt;</span> <span class="n">send_email</span> <span class="o">&gt;&gt;</span> <span class="n">send_telegram</span> <span class="o">&gt;&gt;</span> <span class="n">finish_start</span>
</pre></td></tr></tbody></table></code></pre></div></div>
<p>The task in Apache Airflow webserver</p>
<p align="center">
<img src="/assets/images/12-5.png" alt="drawing" width="700" />
</p>

<h3 id="recap">Recap</h3>
<p>To execute and run our web scraping job, we must create a <code class="language-plaintext highlighter-rouge">.py</code> file and save it in dags directory in Airflow. Then, running the webserver and scheduler, activate the job.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
</pre></td><td class="rouge-code"><pre><span class="c1"># Modules for airflow
</span><span class="kn">from</span> <span class="nn">airflow</span> <span class="kn">import</span> <span class="n">DAG</span>
<span class="kn">from</span> <span class="nn">datetime</span> <span class="kn">import</span> <span class="n">timedelta</span><span class="p">,</span> <span class="n">datetime</span>
<span class="kn">from</span> <span class="nn">airflow.utils.dates</span> <span class="kn">import</span> <span class="n">days_ago</span>
<span class="kn">from</span> <span class="nn">airflow.operators.bash_operator</span> <span class="kn">import</span> <span class="n">BashOperator</span>
<span class="kn">from</span> <span class="nn">airflow.operators.python_operator</span> <span class="kn">import</span> <span class="n">PythonOperator</span>
<span class="kn">from</span> <span class="nn">airflow.operators.email_operator</span> <span class="kn">import</span> <span class="n">EmailOperator</span>
<span class="c1"># Modules for web scraping
</span><span class="kn">import</span> <span class="nn">requests</span>
<span class="kn">from</span> <span class="nn">bs4</span> <span class="kn">import</span> <span class="n">BeautifulSoup</span>
<span class="c1"># Module for data manipulation
</span><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="c1"># Module for regular expression
</span><span class="kn">import</span> <span class="nn">re</span>
<span class="c1"># Module for file management
</span><span class="kn">import</span> <span class="nn">os</span>
<span class="c1"># Module for timing
</span><span class="kn">from</span> <span class="nn">datetime</span> <span class="kn">import</span> <span class="n">datetime</span>
<span class="c1"># Module for reading JSON file
</span><span class="kn">import</span> <span class="nn">json</span>

<span class="c1"># Setting for datetime and directory
</span><span class="n">dir_path</span> <span class="o">=</span> <span class="s">'/home/audhi/airflow'</span>
<span class="n">current_date</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="s">'today'</span><span class="p">).</span><span class="n">strftime</span><span class="p">(</span><span class="s">'%Y-%m-%d'</span><span class="p">)</span>
<span class="c1"># Setting for date transformation
</span><span class="n">dict_month</span> <span class="o">=</span> <span class="p">{</span><span class="s">'Januari'</span><span class="p">:</span><span class="s">'01'</span><span class="p">,</span><span class="s">'Februari'</span><span class="p">:</span><span class="s">'02'</span><span class="p">,</span><span class="s">'Maret'</span><span class="p">:</span><span class="s">'03'</span><span class="p">,</span><span class="s">'April'</span><span class="p">:</span><span class="s">'04'</span><span class="p">,</span><span class="s">'Mei'</span><span class="p">:</span><span class="s">'05'</span><span class="p">,</span><span class="s">'Juni'</span><span class="p">:</span><span class="s">'06'</span><span class="p">,</span><span class="s">'Juli'</span><span class="p">:</span><span class="s">'07'</span><span class="p">,</span>
              <span class="s">'Agustus'</span><span class="p">:</span><span class="s">'08'</span><span class="p">,</span><span class="s">'September'</span><span class="p">:</span><span class="s">'09'</span><span class="p">,</span><span class="s">'Oktober'</span><span class="p">:</span><span class="s">'10'</span><span class="p">,</span><span class="s">'November'</span><span class="p">:</span><span class="s">'11'</span><span class="p">,</span><span class="s">'Desember'</span><span class="p">:</span><span class="s">'12'</span><span class="p">}</span>
<span class="c1"># Read JSON object as a dictionary 
</span><span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">dir_path</span><span class="o">+</span><span class="s">'/config/telegram.json'</span><span class="p">)</span> <span class="k">as</span> <span class="n">tele_data</span><span class="p">:</span>
    <span class="n">telegram_bot</span> <span class="o">=</span> <span class="n">json</span><span class="p">.</span><span class="n">load</span><span class="p">(</span><span class="n">tele_data</span><span class="p">)</span>
<span class="n">telegram_chatid</span> <span class="o">=</span> <span class="n">telegram_bot</span><span class="p">[</span><span class="s">'result'</span><span class="p">][</span><span class="mi">0</span><span class="p">][</span><span class="s">'message'</span><span class="p">][</span><span class="s">'chat'</span><span class="p">][</span><span class="s">'id'</span><span class="p">]</span>
<span class="n">telegram_token</span> <span class="o">=</span> <span class="s">'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'</span>

<span class="k">def</span> <span class="nf">get_url</span><span class="p">():</span>
    <span class="c1"># URL
</span>    <span class="n">url</span> <span class="o">=</span> <span class="s">'https://www.kompas.com/covid-19'</span>
    <span class="n">page</span> <span class="o">=</span> <span class="n">requests</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
    <span class="c1"># Wrangling HTML with BeautifulSoup
</span>    <span class="n">soup</span> <span class="o">=</span> <span class="n">BeautifulSoup</span><span class="p">(</span><span class="n">page</span><span class="p">.</span><span class="n">content</span><span class="p">,</span><span class="s">'html.parser'</span><span class="p">)</span>
    <span class="k">return</span><span class="p">(</span><span class="n">soup</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">get_current_date</span><span class="p">(</span><span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
    <span class="n">date_scrape</span> <span class="o">=</span> <span class="n">soup</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'span'</span><span class="p">,</span><span class="n">class_</span><span class="o">=</span><span class="s">'covid__date'</span><span class="p">).</span><span class="n">text</span>
    <span class="n">date_scrape</span> <span class="o">=</span> <span class="n">re</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="s">r'Update terakhir: (\S+.+WIB)'</span><span class="p">,</span><span class="n">date_scrape</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="n">replace</span><span class="p">(</span><span class="s">', '</span><span class="p">,</span><span class="s">','</span><span class="p">)</span>
    <span class="n">date</span> <span class="o">=</span> <span class="n">date_scrape</span><span class="p">.</span><span class="n">split</span><span class="p">(</span><span class="s">','</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
    <span class="n">time</span> <span class="o">=</span> <span class="n">date_scrape</span><span class="p">.</span><span class="n">split</span><span class="p">(</span><span class="s">','</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span>
    <span class="c1"># Date manipulation
</span>    <span class="n">date_format</span> <span class="o">=</span> <span class="n">re</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="s">r'\w+'</span><span class="p">,</span><span class="n">date</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
    <span class="n">month_format</span> <span class="o">=</span> <span class="n">re</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="s">r'\w+'</span><span class="p">,</span><span class="n">date</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span>
    <span class="n">year_format</span> <span class="o">=</span> <span class="n">re</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="s">r'\w+'</span><span class="p">,</span><span class="n">date</span><span class="p">)[</span><span class="mi">2</span><span class="p">]</span>
    <span class="c1"># If condition
</span>    <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">date_format</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
        <span class="n">date_format</span> <span class="o">=</span> <span class="s">'0'</span> <span class="o">+</span> <span class="n">date_format</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">date_format</span> <span class="o">=</span> <span class="n">date_format</span>
    <span class="c1"># New date format
</span>    <span class="n">date</span> <span class="o">=</span> <span class="n">year_format</span><span class="o">+</span><span class="s">'/'</span><span class="o">+</span><span class="n">dict_month</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">month_format</span><span class="p">)</span><span class="o">+</span><span class="s">'/'</span><span class="o">+</span><span class="n">date_format</span>
    <span class="k">return</span><span class="p">(</span><span class="n">date</span><span class="p">,</span><span class="n">time</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">get_daily_summary</span><span class="p">(</span><span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
    <span class="n">soup</span> <span class="o">=</span> <span class="n">get_url</span><span class="p">()</span>
    <span class="n">date</span><span class="p">,</span><span class="n">time</span> <span class="o">=</span> <span class="n">get_current_date</span><span class="p">()</span>
    <span class="c1"># Get summary
</span>    <span class="c1"># Regular expression pattern
</span>    <span class="n">pattern_summary</span> <span class="o">=</span> <span class="n">re</span><span class="p">.</span><span class="nb">compile</span><span class="p">(</span><span class="s">r'\d[^\s]+'</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">job_elem</span> <span class="ow">in</span> <span class="n">soup</span><span class="p">.</span><span class="n">find_all</span><span class="p">(</span><span class="s">'div'</span><span class="p">,</span><span class="n">class_</span><span class="o">=</span><span class="s">'covid__box'</span><span class="p">):</span>
        <span class="c1"># Each job_elem is a new BeautifulSoup object.
</span>        <span class="n">terkonfirmasi_elem</span> <span class="o">=</span> <span class="n">job_elem</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'div'</span><span class="p">,</span><span class="n">class_</span><span class="o">=</span><span class="s">'covid__box2 -cases'</span><span class="p">)</span>
        <span class="n">dirawat_elem</span> <span class="o">=</span> <span class="n">job_elem</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'div'</span><span class="p">,</span><span class="n">class_</span><span class="o">=</span><span class="s">'covid__box2 -odp'</span><span class="p">)</span>
        <span class="n">meninggal_elem</span> <span class="o">=</span> <span class="n">job_elem</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'div'</span><span class="p">,</span><span class="n">class_</span><span class="o">=</span><span class="s">'covid__box2 -gone'</span><span class="p">)</span>
        <span class="n">sembuh_elem</span> <span class="o">=</span> <span class="n">job_elem</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'div'</span><span class="p">,</span><span class="n">class_</span><span class="o">=</span><span class="s">'covid__box2 -health'</span><span class="p">)</span>
        <span class="c1"># Daily update
</span>        <span class="n">a</span> <span class="o">=</span> <span class="n">pattern_summary</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="n">terkonfirmasi_elem</span><span class="p">.</span><span class="n">text</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="n">replace</span><span class="p">(</span><span class="s">','</span><span class="p">,</span><span class="s">''</span><span class="p">)</span>
        <span class="n">b</span> <span class="o">=</span> <span class="n">pattern_summary</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="n">dirawat_elem</span><span class="p">.</span><span class="n">text</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="n">replace</span><span class="p">(</span><span class="s">','</span><span class="p">,</span><span class="s">''</span><span class="p">)</span>
        <span class="n">c</span> <span class="o">=</span> <span class="n">pattern_summary</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="n">meninggal_elem</span><span class="p">.</span><span class="n">text</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="n">replace</span><span class="p">(</span><span class="s">','</span><span class="p">,</span><span class="s">''</span><span class="p">)</span>
        <span class="n">d</span> <span class="o">=</span> <span class="n">pattern_summary</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="n">sembuh_elem</span><span class="p">.</span><span class="n">text</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="n">replace</span><span class="p">(</span><span class="s">','</span><span class="p">,</span><span class="s">''</span><span class="p">)</span>
        <span class="n">daily_update</span> <span class="o">=</span> <span class="s">','</span><span class="p">.</span><span class="n">join</span><span class="p">([</span><span class="n">date</span><span class="p">,</span><span class="n">time</span><span class="p">,</span><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="p">,</span><span class="n">d</span><span class="p">])</span>
    <span class="k">return</span><span class="p">(</span><span class="n">daily_update</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">get_daily_summary_provinces</span><span class="p">(</span><span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
    <span class="n">soup</span> <span class="o">=</span> <span class="n">get_url</span><span class="p">()</span>
    <span class="n">date</span><span class="p">,</span><span class="n">time</span> <span class="o">=</span> <span class="n">get_current_date</span><span class="p">()</span>
    <span class="c1"># Get summary - provinsi
</span>    <span class="c1"># Regular expression pattern
</span>    <span class="n">pattern_prov</span> <span class="o">=</span> <span class="n">re</span><span class="p">.</span><span class="nb">compile</span><span class="p">(</span><span class="s">r'\d+'</span><span class="p">)</span>
    <span class="n">provinsi</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">terkonfirmasi_prov</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">meninggal_prov</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">sembuh_prov</span> <span class="o">=</span> <span class="p">[]</span>

    <span class="k">for</span> <span class="n">elem</span> <span class="ow">in</span> <span class="n">soup</span><span class="p">.</span><span class="n">find_all</span><span class="p">(</span><span class="s">'div'</span><span class="p">,</span><span class="n">class_</span><span class="o">=</span><span class="s">'covid__row'</span><span class="p">):</span>
        <span class="n">provinsi_elem</span> <span class="o">=</span> <span class="n">elem</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'div'</span><span class="p">,</span><span class="n">class_</span><span class="o">=</span><span class="s">'covid__prov'</span><span class="p">)</span>
        <span class="n">terkonfirmasi_elem</span> <span class="o">=</span> <span class="n">elem</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'span'</span><span class="p">,</span><span class="n">class_</span><span class="o">=</span><span class="s">'-odp'</span><span class="p">)</span>
        <span class="n">meninggal_elem</span> <span class="o">=</span> <span class="n">elem</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'span'</span><span class="p">,</span><span class="n">class_</span><span class="o">=</span><span class="s">'-gone'</span><span class="p">)</span>
        <span class="n">sembuh_elem</span> <span class="o">=</span> <span class="n">elem</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="s">'span'</span><span class="p">,</span><span class="n">class_</span><span class="o">=</span><span class="s">'-health'</span><span class="p">)</span>
        <span class="c1"># Append to list
</span>        <span class="n">provinsi</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">provinsi_elem</span><span class="p">.</span><span class="n">text</span><span class="p">)</span>
        <span class="n">terkonfirmasi_prov</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">pattern_prov</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="n">terkonfirmasi_elem</span><span class="p">.</span><span class="n">text</span><span class="p">)[</span><span class="mi">0</span><span class="p">])</span>
        <span class="n">meninggal_prov</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">pattern_prov</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="n">meninggal_elem</span><span class="p">.</span><span class="n">text</span><span class="p">)[</span><span class="mi">0</span><span class="p">])</span>
        <span class="n">sembuh_prov</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">pattern_prov</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="n">sembuh_elem</span><span class="p">.</span><span class="n">text</span><span class="p">)[</span><span class="mi">0</span><span class="p">])</span>

    <span class="c1"># Create dataframe
</span>    <span class="n">dic_data</span> <span class="o">=</span> <span class="p">{</span><span class="s">'date'</span><span class="p">:[</span><span class="n">date</span><span class="p">]</span><span class="o">*</span><span class="nb">len</span><span class="p">(</span><span class="n">provinsi</span><span class="p">),</span><span class="s">'time'</span><span class="p">:[</span><span class="n">time</span><span class="p">]</span><span class="o">*</span><span class="nb">len</span><span class="p">(</span><span class="n">provinsi</span><span class="p">),</span><span class="s">'provinces'</span><span class="p">:</span><span class="n">provinsi</span><span class="p">,</span>
                <span class="s">'confirmed'</span><span class="p">:</span><span class="n">terkonfirmasi_prov</span><span class="p">,</span><span class="s">'deaths'</span><span class="p">:</span><span class="n">meninggal_prov</span><span class="p">,</span><span class="s">'recovered'</span><span class="p">:</span><span class="n">sembuh_prov</span><span class="p">}</span>
    <span class="n">df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">DataFrame</span><span class="p">(</span><span class="n">data</span> <span class="o">=</span> <span class="n">dic_data</span><span class="p">)</span>
    <span class="k">return</span><span class="p">(</span><span class="n">df</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">summary_save_txt</span><span class="p">(</span><span class="o">**</span><span class="n">context</span><span class="p">):</span>
    <span class="n">value</span> <span class="o">=</span> <span class="n">context</span><span class="p">[</span><span class="s">'task_instance'</span><span class="p">].</span><span class="n">xcom_pull</span><span class="p">(</span><span class="n">task_ids</span> <span class="o">=</span> <span class="s">'summary_scraping_data'</span><span class="p">)</span>
    <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">dir_path</span><span class="o">+</span><span class="s">'/data/covid19/summary_covid19.txt'</span><span class="p">,</span><span class="s">'r'</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
        <span class="n">lines</span> <span class="o">=</span> <span class="n">f</span><span class="p">.</span><span class="n">read</span><span class="p">().</span><span class="n">splitlines</span><span class="p">()</span>
        <span class="n">last_line</span> <span class="o">=</span> <span class="n">lines</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
        <span class="k">if</span> <span class="n">last_line</span> <span class="o">==</span> <span class="n">value</span><span class="p">:</span>
            <span class="n">notif</span> <span class="o">=</span> <span class="s">'Last update:'</span><span class="p">,</span><span class="n">re</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="s">r'^(.+?),'</span><span class="p">,</span><span class="n">last_line</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">dir_path</span><span class="o">+</span><span class="s">'/data/covid19/summary_covid19.txt'</span><span class="p">,</span><span class="s">'a+'</span><span class="p">)</span> <span class="k">as</span> <span class="n">ff</span><span class="p">:</span>
                <span class="n">ff</span><span class="p">.</span><span class="n">write</span><span class="p">(</span><span class="s">'{}</span><span class="se">\n</span><span class="s">'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">value</span><span class="p">))</span>
                <span class="n">ff</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>
            <span class="n">notif</span> <span class="o">=</span> <span class="s">'Up to date data:'</span><span class="p">,</span> <span class="n">re</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="s">r'^(.+?),'</span><span class="p">,</span><span class="n">value</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
    <span class="k">return</span><span class="p">(</span><span class="n">notif</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">provinces_save_csv</span><span class="p">(</span><span class="o">**</span><span class="n">context</span><span class="p">):</span>
    <span class="n">value</span> <span class="o">=</span> <span class="n">context</span><span class="p">[</span><span class="s">'task_instance'</span><span class="p">].</span><span class="n">xcom_pull</span><span class="p">(</span><span class="n">task_ids</span> <span class="o">=</span> <span class="s">'provinces_scraping_data'</span><span class="p">)</span>
    <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">dir_path</span><span class="o">+</span><span class="s">'/data/covid19/daily_update_covid.csv'</span><span class="p">,</span><span class="s">'r'</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
        <span class="n">lines</span> <span class="o">=</span> <span class="n">f</span><span class="p">.</span><span class="n">read</span><span class="p">().</span><span class="n">splitlines</span><span class="p">()</span>
        <span class="n">last_line</span> <span class="o">=</span> <span class="n">lines</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
        <span class="k">if</span> <span class="n">re</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="s">r'^(.+?),'</span><span class="p">,</span><span class="n">last_line</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="n">value</span><span class="p">[</span><span class="s">'date'</span><span class="p">].</span><span class="n">unique</span><span class="p">().</span><span class="n">tolist</span><span class="p">()[</span><span class="mi">0</span><span class="p">]:</span>
            <span class="n">notif</span> <span class="o">=</span> <span class="s">'Last update:'</span><span class="p">,</span><span class="n">re</span><span class="p">.</span><span class="n">findall</span><span class="p">(</span><span class="s">r'^(.+?),'</span><span class="p">,</span><span class="n">last_line</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">dir_path</span><span class="o">+</span><span class="s">'/data/covid19/daily_update_covid.csv'</span><span class="p">,</span><span class="s">'a'</span><span class="p">)</span> <span class="k">as</span> <span class="n">ff</span><span class="p">:</span>
                <span class="n">value</span><span class="p">.</span><span class="n">to_csv</span><span class="p">(</span><span class="n">ff</span><span class="p">,</span><span class="n">header</span><span class="o">=</span><span class="bp">False</span><span class="p">,</span><span class="n">index</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
                <span class="n">ff</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>
            <span class="n">notif</span> <span class="o">=</span> <span class="s">'Up to date data:'</span><span class="p">,</span> <span class="n">value</span><span class="p">[</span><span class="s">'date'</span><span class="p">].</span><span class="n">unique</span><span class="p">().</span><span class="n">tolist</span><span class="p">()[</span><span class="mi">0</span><span class="p">]</span>
    <span class="k">return</span><span class="p">(</span><span class="n">notif</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">telegram_bot</span><span class="p">(</span><span class="o">**</span><span class="n">context</span><span class="p">):</span>
    <span class="n">value_daily</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="n">context</span><span class="p">[</span><span class="s">'task_instance'</span><span class="p">].</span><span class="n">xcom_pull</span><span class="p">(</span><span class="n">task_ids</span> <span class="o">=</span> <span class="s">'summary_scraping_data'</span><span class="p">).</span><span class="n">split</span><span class="p">(</span><span class="s">','</span><span class="p">))</span>
    <span class="n">value_date</span> <span class="o">=</span> <span class="n">context</span><span class="p">[</span><span class="s">'task_instance'</span><span class="p">].</span><span class="n">xcom_pull</span><span class="p">(</span><span class="n">task_ids</span> <span class="o">=</span> <span class="s">'provinces_save_data'</span><span class="p">)</span>
    <span class="n">value_render</span> <span class="o">=</span> <span class="s">' '</span><span class="p">.</span><span class="n">join</span><span class="p">([</span><span class="nb">str</span><span class="p">(</span><span class="n">elem</span><span class="p">)</span> <span class="k">for</span> <span class="n">elem</span> <span class="ow">in</span> <span class="nb">list</span><span class="p">(</span><span class="n">value_date</span><span class="p">)])</span>
    <span class="n">message</span> <span class="o">=</span> <span class="s">'''
    COVID-19 DATA - {update_date} {time}
    Kompas News

    Confirmed: {confirmed}
    Treated: {treated} 
    Deaths: {deaths}
    Recovered: {recover}
    Scraped on: {scraped_date} WIB

    Developed by Audhi Aprilliant
    '''</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">update_date</span> <span class="o">=</span> <span class="n">value_render</span><span class="p">,</span><span class="n">time</span> <span class="o">=</span> <span class="n">value_daily</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="n">confirmed</span> <span class="o">=</span> <span class="n">value_daily</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="n">treated</span> <span class="o">=</span> <span class="n">value_daily</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span>\
        <span class="n">deaths</span> <span class="o">=</span> <span class="n">value_daily</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="n">recover</span> <span class="o">=</span> <span class="n">value_daily</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span><span class="n">scraped_date</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="n">to_datetime</span><span class="p">(</span><span class="s">'today'</span><span class="p">).</span><span class="n">strftime</span><span class="p">(</span><span class="s">'%m-%d-%Y %H:%M:%S'</span><span class="p">))</span>
    
	<span class="c1"># Send text message
</span>    <span class="n">bot_token</span> <span class="o">=</span> <span class="n">telegram_token</span>
    <span class="n">bot_chatID</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="n">telegram_chatid</span><span class="p">)</span>
    <span class="n">send_text</span> <span class="o">=</span> <span class="s">'https://api.telegram.org/bot'</span><span class="o">+</span><span class="n">bot_token</span><span class="o">+</span><span class="s">'/sendMessage?chat_id='</span><span class="o">+</span><span class="n">bot_chatID</span><span class="o">+</span><span class="s">'&amp;parse_mode=Markdown&amp;text='</span><span class="o">+</span><span class="n">message</span>
    <span class="n">requests</span><span class="p">.</span><span class="n">get</span><span class="p">(</span><span class="n">send_text</span><span class="p">)</span>

<span class="c1"># Set default args
</span><span class="n">default_args</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">'owner'</span><span class="p">:</span> <span class="s">'airflow'</span><span class="p">,</span>
    <span class="s">'depends_on_past'</span><span class="p">:</span> <span class="bp">False</span><span class="p">,</span>
    <span class="s">'start_date'</span><span class="p">:</span> <span class="n">datetime</span><span class="p">(</span><span class="mi">2020</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">20</span><span class="p">),</span>
    <span class="s">'email'</span><span class="p">:</span> <span class="p">[</span><span class="s">'your_email@gmail.com'</span><span class="p">],</span>
    <span class="s">'email_on_failure'</span><span class="p">:</span> <span class="bp">True</span><span class="p">,</span>
    <span class="s">'email_on_retry'</span><span class="p">:</span> <span class="bp">False</span><span class="p">,</span>
    <span class="s">'retries'</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
    <span class="s">'retry_delay'</span><span class="p">:</span> <span class="n">timedelta</span><span class="p">(</span><span class="n">minutes</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>
<span class="p">}</span>

<span class="c1"># Set Schedule: Run pipeline once a day.
# Use cron to define exact time (UTC). Eg. 8:15 AM would be '15 08 * * *'
</span><span class="n">schedule_interval</span> <span class="o">=</span> <span class="s">'30 09 * * *'</span>

<span class="c1"># Define DAG: Set ID and assign default args and schedule interval
</span><span class="n">dag</span> <span class="o">=</span> <span class="n">DAG</span><span class="p">(</span>
    <span class="n">dag_id</span> <span class="o">=</span> <span class="s">'scraping_data_covid19'</span><span class="p">,</span>
    <span class="n">default_args</span> <span class="o">=</span> <span class="n">default_args</span><span class="p">,</span>
    <span class="n">schedule_interval</span> <span class="o">=</span> <span class="n">schedule_interval</span>
<span class="p">)</span>

<span class="c1"># Echo task start
</span><span class="n">task_start</span> <span class="o">=</span> <span class="n">BashOperator</span><span class="p">(</span>
    <span class="n">task_id</span> <span class="o">=</span> <span class="s">'start_task'</span><span class="p">,</span>
    <span class="n">bash_command</span> <span class="o">=</span> <span class="s">'echo start'</span><span class="p">,</span>
    <span class="n">dag</span> <span class="o">=</span> <span class="n">dag</span>
<span class="p">)</span>

<span class="c1"># Task 1: scraping daily summary data
</span><span class="n">summary_scraping</span> <span class="o">=</span> <span class="n">PythonOperator</span><span class="p">(</span>
    <span class="n">task_id</span> <span class="o">=</span> <span class="s">'summary_scraping_data'</span><span class="p">,</span>
    <span class="n">python_callable</span> <span class="o">=</span> <span class="n">get_daily_summary</span><span class="p">,</span>
    <span class="n">dag</span> <span class="o">=</span> <span class="n">dag</span>
<span class="p">)</span>

<span class="c1"># Task 2: save the daily summary data
</span><span class="n">summary_save</span> <span class="o">=</span> <span class="n">PythonOperator</span><span class="p">(</span>
    <span class="n">task_id</span> <span class="o">=</span> <span class="s">'summary_save_data'</span><span class="p">,</span>
    <span class="n">python_callable</span> <span class="o">=</span> <span class="n">summary_save_txt</span><span class="p">,</span>
    <span class="n">provide_context</span> <span class="o">=</span> <span class="bp">True</span><span class="p">,</span>
    <span class="n">dag</span> <span class="o">=</span> <span class="n">dag</span>
<span class="p">)</span>

<span class="c1"># Task 3: scraping daily provinces data
</span><span class="n">provinces_scraping</span> <span class="o">=</span> <span class="n">PythonOperator</span><span class="p">(</span>
    <span class="n">task_id</span> <span class="o">=</span> <span class="s">'provinces_scraping_data'</span><span class="p">,</span>
    <span class="n">python_callable</span> <span class="o">=</span> <span class="n">get_daily_summary_provinces</span><span class="p">,</span>
    <span class="n">dag</span> <span class="o">=</span> <span class="n">dag</span>
<span class="p">)</span>

<span class="c1"># Task 4: save the daily summary data
</span><span class="n">provinces_save</span> <span class="o">=</span> <span class="n">PythonOperator</span><span class="p">(</span>
    <span class="n">task_id</span> <span class="o">=</span> <span class="s">'provinces_save_data'</span><span class="p">,</span>
    <span class="n">python_callable</span> <span class="o">=</span> <span class="n">provinces_save_csv</span><span class="p">,</span>
    <span class="n">provide_context</span> <span class="o">=</span> <span class="bp">True</span><span class="p">,</span>
    <span class="n">dag</span> <span class="o">=</span> <span class="n">dag</span>
<span class="p">)</span>

<span class="c1"># Task 5: send norification email
</span><span class="n">send_email</span> <span class="o">=</span> <span class="n">EmailOperator</span><span class="p">(</span>
    <span class="n">task_id</span> <span class="o">=</span> <span class="s">'send_email'</span><span class="p">,</span>
    <span class="n">to</span> <span class="o">=</span> <span class="p">[</span><span class="s">'your_email@gmail.com'</span><span class="p">],</span>
    <span class="n">subject</span> <span class="o">=</span> <span class="s">'Covid19 data '</span><span class="p">,</span>
    <span class="n">html_content</span> <span class="o">=</span> <span class="s">'''
    {date} Covid19 data has been scraped!
    '''</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">date</span> <span class="o">=</span> <span class="n">current_date</span><span class="p">),</span>
    <span class="n">dag</span> <span class="o">=</span> <span class="n">dag</span>
<span class="p">)</span>

<span class="c1"># Task 6: send notification Telegram
</span><span class="n">send_telegram</span> <span class="o">=</span> <span class="n">PythonOperator</span><span class="p">(</span>
    <span class="n">task_id</span> <span class="o">=</span> <span class="s">'send_telegram'</span><span class="p">,</span>
    <span class="n">python_callable</span> <span class="o">=</span> <span class="n">telegram_bot</span><span class="p">,</span>
    <span class="n">provide_context</span> <span class="o">=</span> <span class="bp">True</span><span class="p">,</span>
    <span class="n">dag</span> <span class="o">=</span> <span class="n">dag</span>
<span class="p">)</span>

<span class="c1"># Echo task finish
</span><span class="n">finish_start</span> <span class="o">=</span> <span class="n">BashOperator</span><span class="p">(</span>
    <span class="n">task_id</span> <span class="o">=</span> <span class="s">'finish_task'</span><span class="p">,</span>
    <span class="n">bash_command</span> <span class="o">=</span> <span class="s">'echo finish'</span><span class="p">,</span>
    <span class="n">dag</span> <span class="o">=</span> <span class="n">dag</span>
<span class="p">)</span>

<span class="c1"># Set up the dependencies
</span><span class="n">task_start</span> <span class="o">&gt;&gt;</span> <span class="n">summary_scraping</span> <span class="o">&gt;&gt;</span> <span class="n">summary_save</span> <span class="o">&gt;&gt;</span> <span class="n">provinces_scraping</span>
<span class="n">provinces_scraping</span> <span class="o">&gt;&gt;</span> <span class="n">provinces_save</span> <span class="o">&gt;&gt;</span> <span class="n">send_email</span> <span class="o">&gt;&gt;</span> <span class="n">send_telegram</span> <span class="o">&gt;&gt;</span> <span class="n">finish_start</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<h3 id="sources">Sources</h3>
<p><a target="_blank" href="https://github.com/audhiaprilliant/Web-Scraping-Covid19-Kompas-News" class="btn btn-danger">GitHub</a></p>
:ET